name: Automock E2E

on:
  workflow_dispatch:
    inputs:
      target_branch:
        description: 'E2E Target Branch'
        required: true

jobs:
  build:
    name: Build, Prepare and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        e2e-project: ['jest/nestjs', 'sinon/nestjs', 'jest/inversify', 'sinon/inversify']
        node-version: [16.x, 18.x, 20.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.target_branch }}

      - name: Use Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Yarn
        run: yarn --frozen-lockfile

      - name: Build
        run: yarn build

      - name: Pack
        run: lerna exec -- npm pack

      - name: Prepare Tarballs
        run: |
          mkdir -p $PWD/e2e/tarballs
          lerna exec -- mv "*.tgz" $PWD/e2e/tarballs

      - name: Rename Tarballs
        run: |
          for file in $PWD/e2e/tarballs/automock-*.tgz; do
            [[ $file =~ automock-(.+)-[0-9]+\.[0-9]+\.[0-9]+(-dev\.[0-9]+)?\.tgz ]]
            new_name="${BASH_REMATCH[1]}.tgz"
            mv "$file" "$PWD/e2e/tarballs/$new_name"
          done

      - name: Remove Source Code
        run: rm -rf packages

      - name: Setup and Test
        run: |
          IFS='/' read -r library framework <<< "${{ matrix.e2e-project }}"
          echo "FRAMEWORK=$framework" >> $GITHUB_ENV
          echo "LIBRARY=$library" >> $GITHUB_ENV
      - name: Execute Test
        run: |
          cp -r "$PWD/e2e/tarballs" "$PWD/e2e/$LIBRARY/$FRAMEWORK"
          
          # Remove the unnecessary tarballs based on the library
          if [ "$LIBRARY" = "jest" ]; then
            rm -rf "$PWD/e2e/$LIBRARY/$FRAMEWORK/tarballs/sinon.tgz"
          elif [ "$LIBRARY" = "sinon" ]; then
            rm -rf "$PWD/e2e/$LIBRARY/$FRAMEWORK/tarballs/jest.tgz"
          fi

          rm -rf "$PWD/e2e/$LIBRARY/$FRAMEWORK/node_modules"
          npm install --prefix "$PWD/e2e/$LIBRARY/$FRAMEWORK" --no-cache --no-package-lock
          npm test --prefix "$PWD/e2e/$LIBRARY/$FRAMEWORK"
        working-directory: ${{ github.workspace }}
